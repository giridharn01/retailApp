{"version":3,"file":"static/js/140.43e6ec8f.chunk.js","mappings":"oLAKA,MAiQA,EAjQwBA,EAAAA,KAAW,MAChBC,EAAAA,EAAAA,MAAjB,MACM,KAAEC,EAAI,MAAEC,IAAUC,EAAAA,EAAAA,MACjBC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,gBAAiB,GACjBC,YAAa,GACbC,gBAAiB,MAEZC,EAAOC,IAAYP,EAAAA,EAAAA,UAAS,KAC5BQ,EAASC,IAAcT,EAAAA,EAAAA,UAAS,KAChCU,EAASC,IAAcX,EAAAA,EAAAA,WAAS,IAChCY,EAAWC,IAAgBb,EAAAA,EAAAA,UAAS,YACpCc,EAAiBC,IAAsBf,EAAAA,EAAAA,UAAS,KAEvDgB,EAAAA,EAAAA,WAAU,KACJrB,IACFI,EAAYkB,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACPhB,KAAMN,EAAKM,MAAQ,GACnBC,MAAOP,EAAKO,OAAS,MAEvBiB,MAED,CAACxB,IAEJ,MAAMwB,GAAuBC,EAAAA,EAAAA,aAAYC,UACvC,IACE,MAAMC,QAAYC,EAAAA,EAAAA,GAAW,0BAC7BR,EAAmBO,EAAIE,KACzB,CAAE,MAAOC,GACPlB,EAAS,mCACX,GACC,IAEGmB,GAAeN,EAAAA,EAAAA,aAAaO,IAChC5B,EAAYkB,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP,CAACU,EAAEC,OAAO3B,MAAO0B,EAAEC,OAAOC,UAE3B,IAEGC,GAAsBV,EAAAA,EAAAA,aAAYC,UACtCM,EAAEI,iBACF,IACExB,EAAS,IACTE,EAAW,IACXE,GAAW,SACLY,EAAAA,EAAAA,GAAW,iBAAkB,MAAO,CACxCtB,KAAMH,EAASG,KACfC,MAAOJ,EAASI,QAElBO,EAAW,+BACb,CAAE,MAAOgB,GACPlB,EAASkB,EAAIO,SAAW,2BAC1B,CAAC,QACCrB,GAAW,EACb,GACC,CAACb,IAEEmC,GAAuBb,EAAAA,EAAAA,aAAYC,UAEvC,GADAM,EAAEI,iBACEjC,EAASM,cAAgBN,EAASO,gBAItC,IACEE,EAAS,IACTE,EAAW,IACXE,GAAW,SACLY,EAAAA,EAAAA,GAAW,yBAA0B,MAAO,CAChDpB,gBAAiBL,EAASK,gBAC1BC,YAAaN,EAASM,cAExBK,EAAW,iCACXV,EAAYkB,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACPd,gBAAiB,GACjBC,YAAa,GACbC,gBAAiB,KAErB,CAAE,MAAOoB,GACPlB,EAASkB,EAAIO,SAAW,4BAC1B,CAAC,QACCrB,GAAW,EACb,MAtBEJ,EAAS,+BAuBV,CAACT,IAEJ,OAAKH,GAKHuC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAC,gBAExCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UACvCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAMzB,EAAa,WAC5BsB,UAAS,GAAAI,OACO,YAAd3B,EACI,gCACA,6EAA4E,+DACpBwB,SAC/D,yBAGDC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAMzB,EAAa,YAC5BsB,UAAS,GAAAI,OACO,aAAd3B,EACI,gCACA,6EAA4E,+DACpBwB,SAC/D,qBAGDC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAMzB,EAAa,YAC5BsB,UAAS,GAAAI,OACO,aAAd3B,EACI,gCACA,6EAA4E,+DACpBwB,SAC/D,4BAON9B,IACC+B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gFAAgFK,KAAK,QAAOJ,UACzGC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,kBAAiBC,SAAE9B,MAItCE,IACC6B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sFAAsFK,KAAK,QAAOJ,UAC/GC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,kBAAiBC,SAAE5B,MAIxB,YAAdI,IACCsB,EAAAA,EAAAA,MAAA,QAAMO,SAAUX,EAAqBK,UAAU,YAAWC,SAAA,EACxDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,0CAAyCC,SAAC,UAC3DC,EAAAA,EAAAA,KAAA,SACEK,KAAK,OACLzC,KAAK,OACL4B,MAAO/B,EAASG,KAChB0C,SAAUjB,EACVS,UAAU,mGACVS,UAAQ,QAGZV,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,0CAAyCC,SAAC,WAC3DC,EAAAA,EAAAA,KAAA,SACEK,KAAK,QACLzC,KAAK,QACL4B,MAAO/B,EAASI,MAChByC,SAAUjB,EACVS,UAAU,mGACVS,UAAQ,QAGZP,EAAAA,EAAAA,KAAA,UACEK,KAAK,SACLG,SAAUnC,EACVyB,UAAU,2NAA0NC,SAEnO1B,EAAU,cAAgB,sBAKlB,aAAdE,IACCsB,EAAAA,EAAAA,MAAA,QAAMO,SAAUR,EAAsBE,UAAU,YAAWC,SAAA,EACzDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,0CAAyCC,SAAC,sBAC3DC,EAAAA,EAAAA,KAAA,SACEK,KAAK,WACLzC,KAAK,kBACL4B,MAAO/B,EAASK,gBAChBwC,SAAUjB,EACVS,UAAU,mGACVS,UAAQ,QAGZV,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,0CAAyCC,SAAC,kBAC3DC,EAAAA,EAAAA,KAAA,SACEK,KAAK,WACLzC,KAAK,cACL4B,MAAO/B,EAASM,YAChBuC,SAAUjB,EACVS,UAAU,mGACVS,UAAQ,QAGZV,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,0CAAyCC,SAAC,0BAC3DC,EAAAA,EAAAA,KAAA,SACEK,KAAK,WACLzC,KAAK,kBACL4B,MAAO/B,EAASO,gBAChBsC,SAAUjB,EACVS,UAAU,mGACVS,UAAQ,QAGZP,EAAAA,EAAAA,KAAA,UACEK,KAAK,SACLG,SAAUnC,EACVyB,UAAU,2NAA0NC,SAEnO1B,EAAU,uBAAyB,uBAK3B,aAAdE,IACCyB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACI,IAA3BtB,EAAgBgC,QACfT,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAC,+BAE7BtB,EAAgBiC,IAAIC,IAClBd,EAAAA,EAAAA,MAAA,OAAuBC,UAAU,wBAAuBC,SAAA,EACtDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAC/CF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,SAAEY,EAAQC,eAC7Cf,EAAAA,EAAAA,MAAA,KAAGC,UAAU,wBAAuBC,SAAA,CAAC,YAAUY,EAAQE,YAAY,IAAEF,EAAQG,iBAC7EjB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,wBAAuBC,SAAA,CAAC,mBAAiB,IAAIgB,KAAKJ,EAAQK,eAAeC,4BAExFjB,EAAAA,EAAAA,KAAA,QAAMF,UAAS,6BAAAI,OACM,YAAnBS,EAAQO,OAAuB,gCACZ,gBAAnBP,EAAQO,OAA2B,4BAChB,cAAnBP,EAAQO,OAAyB,8BACjC,2BACCnB,SACAY,EAAQO,OAAOC,OAAO,GAAGC,cAAgBT,EAAQO,OAAOG,MAAM,SAGnErB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAEY,EAAQW,gBAhBnCX,EAAQY,YA7IrBvB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,yC","sources":["pages/user/UserProfilePage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { apiRequest } from '../../utils/api';\nimport { useAuth } from '../../context/AuthContext';\n\nconst UserProfilePage = React.memo(() => {\n  const navigate = useNavigate();\n  const { user, login } = useAuth();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState('profile');\n  const [serviceRequests, setServiceRequests] = useState([]);\n\n  useEffect(() => {\n    if (user) {\n      setFormData(prev => ({\n        ...prev,\n        name: user.name || '',\n        email: user.email || ''\n      }));\n      fetchServiceRequests();\n    }\n  }, [user]);\n\n  const fetchServiceRequests = useCallback(async () => {\n    try {\n      const res = await apiRequest('/service-requests/user');\n      setServiceRequests(res.data);\n    } catch (err) {\n      setError('Failed to fetch service requests');\n    }\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  }, []);\n\n  const handleProfileUpdate = useCallback(async (e) => {\n    e.preventDefault();\n    try {\n      setError('');\n      setSuccess('');\n      setLoading(true);\n      await apiRequest('/users/profile', 'PUT', {\n        name: formData.name,\n        email: formData.email\n      });\n      setSuccess('Profile updated successfully');\n    } catch (err) {\n      setError(err.message || 'Failed to update profile');\n    } finally {\n      setLoading(false);\n    }\n  }, [formData]);\n\n  const handlePasswordChange = useCallback(async (e) => {\n    e.preventDefault();\n    if (formData.newPassword !== formData.confirmPassword) {\n      setError('New passwords do not match');\n      return;\n    }\n    try {\n      setError('');\n      setSuccess('');\n      setLoading(true);\n      await apiRequest('/users/change-password', 'PUT', {\n        currentPassword: formData.currentPassword,\n        newPassword: formData.newPassword\n      });\n      setSuccess('Password changed successfully');\n      setFormData(prev => ({\n        ...prev,\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      }));\n    } catch (err) {\n      setError(err.message || 'Failed to change password');\n    } finally {\n      setLoading(false);\n    }\n  }, [formData]);\n\n  if (!user) {\n    return <div>Please log in to view your profile.</div>;\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-2 sm:px-4 lg:px-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">My Profile</h1>\n      \n      <div className=\"mb-6\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8\">\n            <button\n              onClick={() => setActiveTab('profile')}\n              className={`${\n                activeTab === 'profile'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Profile Information\n            </button>\n            <button\n              onClick={() => setActiveTab('password')}\n              className={`${\n                activeTab === 'password'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Change Password\n            </button>\n            <button\n              onClick={() => setActiveTab('services')}\n              className={`${\n                activeTab === 'services'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Service Requests\n            </button>\n          </nav>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n          <span className=\"block sm:inline\">{error}</span>\n        </div>\n      )}\n\n      {success && (\n        <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n          <span className=\"block sm:inline\">{success}</span>\n        </div>\n      )}\n\n      {activeTab === 'profile' && (\n        <form onSubmit={handleProfileUpdate} className=\"space-y-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n              required\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            {loading ? 'Updating...' : 'Update Profile'}\n          </button>\n        </form>\n      )}\n\n      {activeTab === 'password' && (\n        <form onSubmit={handlePasswordChange} className=\"space-y-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Current Password</label>\n            <input\n              type=\"password\"\n              name=\"currentPassword\"\n              value={formData.currentPassword}\n              onChange={handleChange}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n              required\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">New Password</label>\n            <input\n              type=\"password\"\n              name=\"newPassword\"\n              value={formData.newPassword}\n              onChange={handleChange}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n              required\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Confirm New Password</label>\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            {loading ? 'Changing Password...' : 'Change Password'}\n          </button>\n        </form>\n      )}\n\n      {activeTab === 'services' && (\n        <div className=\"space-y-4\">\n          {serviceRequests.length === 0 ? (\n            <p className=\"text-gray-500\">No service requests found.</p>\n          ) : (\n            serviceRequests.map(request => (\n              <div key={request._id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h3 className=\"text-lg font-medium\">{request.serviceType}</h3>\n                    <p className=\"text-sm text-gray-500\">Vehicle: {request.vehicleType} {request.vehicleModel}</p>\n                    <p className=\"text-sm text-gray-500\">Preferred Date: {new Date(request.preferredDate).toLocaleDateString()}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-sm ${\n                    request.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                    request.status === 'in-progress' ? 'bg-blue-100 text-blue-800' :\n                    request.status === 'completed' ? 'bg-green-100 text-green-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {request.status.charAt(0).toUpperCase() + request.status.slice(1)}\n                  </span>\n                </div>\n                <p className=\"mt-2 text-gray-600\">{request.description}</p>\n              </div>\n            ))\n          )}\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default UserProfilePage; "],"names":["React","useNavigate","user","login","useAuth","formData","setFormData","useState","name","email","currentPassword","newPassword","confirmPassword","error","setError","success","setSuccess","loading","setLoading","activeTab","setActiveTab","serviceRequests","setServiceRequests","useEffect","prev","_objectSpread","fetchServiceRequests","useCallback","async","res","apiRequest","data","err","handleChange","e","target","value","handleProfileUpdate","preventDefault","message","handlePasswordChange","_jsxs","className","children","_jsx","onClick","concat","role","onSubmit","type","onChange","required","disabled","length","map","request","serviceType","vehicleType","vehicleModel","Date","preferredDate","toLocaleDateString","status","charAt","toUpperCase","slice","description","_id"],"sourceRoot":""}