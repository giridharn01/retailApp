{"version":3,"file":"static/js/343.cac611bb.chunk.js","mappings":"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","sources":["pages/user/OrdersPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { apiRequest } from '../../utils/api';\r\n\r\nconst OrdersPage = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrder, setSelectedOrder] = useState(null);\r\n    const [filter, setFilter] = useState('all');\r\n    const [statusUpdates, setStatusUpdates] = useState([]);\r\n    const [showUpdateNotification, setShowUpdateNotification] = useState(false);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        fetchOrders();\r\n        \r\n        // If navigating from checkout, show the new order\r\n        if (location.state?.order) {\r\n            setSelectedOrder(location.state.order);\r\n        }\r\n    }, [location.state]);\r\n\r\n    // --- Polling-based real-time updates (Vercel-compatible) ---\r\n    useEffect(() => {\r\n        console.log('OrdersPage setting up polling for real-time updates');\r\n        \r\n        // Poll for updates every 15 seconds\r\n        const pollInterval = setInterval(() => {\r\n            fetchOrders(true); // Silent refresh\r\n        }, 15000);\r\n\r\n        // Also poll when user focuses back on the tab\r\n        const handleFocus = () => {\r\n            fetchOrders(true);\r\n        };\r\n\r\n        window.addEventListener('focus', handleFocus);\r\n\r\n        return () => {\r\n            clearInterval(pollInterval);\r\n            window.removeEventListener('focus', handleFocus);\r\n        };\r\n    }, []);\r\n\r\n    const fetchOrders = async (silent = false) => {\r\n        try {\r\n            if (!silent) {\r\n                setLoading(true);\r\n            }\r\n            const response = await apiRequest('/orders');\r\n            const newOrders = response.data;\r\n            \r\n            // Check for status changes if this is a silent refresh\r\n            if (silent && orders.length > 0) {\r\n                const updates = [];\r\n                newOrders.forEach(newOrder => {\r\n                    const oldOrder = orders.find(o => o._id === newOrder._id);\r\n                    if (oldOrder && oldOrder.status !== newOrder.status) {\r\n                        updates.push({\r\n                            orderNumber: newOrder.orderNumber,\r\n                            oldStatus: oldOrder.status,\r\n                            newStatus: newOrder.status\r\n                        });\r\n                    }\r\n                });\r\n                \r\n                if (updates.length > 0) {\r\n                    setStatusUpdates(updates);\r\n                    setShowUpdateNotification(true);\r\n                    // Auto-hide notification after 5 seconds\r\n                    setTimeout(() => setShowUpdateNotification(false), 5000);\r\n                }\r\n            }\r\n            \r\n            setOrders(newOrders);\r\n        } catch (error) {\r\n            console.error('Error fetching orders:', error);\r\n        } finally {\r\n            if (!silent) {\r\n                setLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const getStatusIcon = (status) => {\r\n        return null; // No icon needed\r\n    };\r\n\r\n    const getStatusColor = (status) => {\r\n        switch (status) {\r\n            case 'ready-for-pickup':\r\n                return 'bg-green-100 text-green-800';\r\n            case 'in-progress':\r\n                return 'bg-blue-100 text-blue-800';\r\n            case 'cancelled':\r\n                return 'bg-red-100 text-red-800';\r\n            case 'pending':\r\n            default:\r\n                return 'bg-yellow-100 text-yellow-800';\r\n        }\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        return new Date(dateString).toLocaleDateString('en-IN', {\r\n            year: 'numeric',\r\n            month: 'short',\r\n            day: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n        });\r\n    };\r\n\r\n    const formatTime = (dateString) => {\r\n        return new Date(dateString).toLocaleTimeString('en-IN', {\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            second: '2-digit'\r\n        });\r\n    };\r\n\r\n    const isRecentUpdate = (order) => {\r\n        // Check if order has recent status history updates (last 5 minutes)\r\n        if (order.statusHistory && order.statusHistory.length > 0) {\r\n            const latestUpdate = order.statusHistory[order.statusHistory.length - 1];\r\n            const updateTime = new Date(latestUpdate.timestamp);\r\n            const now = new Date();\r\n            const timeDiff = now - updateTime;\r\n            return timeDiff < 5 * 60 * 1000; // 5 minutes\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const filteredOrders = orders.filter(order => {\r\n        if (filter === 'all') return true;\r\n        return order.status === filter;\r\n    });\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex justify-center items-center min-h-[60vh]\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"max-w-6xl mx-auto px-4 py-8\">\r\n            {/* Status Update Notification */}\r\n            {showUpdateNotification && (\r\n                <div className=\"fixed top-4 right-4 z-50 bg-blue-500 text-white px-6 py-3 rounded-lg shadow-lg flex items-center space-x-3 animate-pulse\">\r\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                    <div>\r\n                        <span className=\"font-medium\">Order status updated!</span>\r\n                        <div className=\"text-sm opacity-90\">\r\n                            {statusUpdates.map((update, index) => (\r\n                                <div key={index}>\r\n                                    Order #{update.orderNumber}: {update.oldStatus} → {update.newStatus}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <button\r\n                        onClick={() => setShowUpdateNotification(false)}\r\n                        className=\"ml-2 text-white hover:text-gray-200\"\r\n                    >\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            )}\r\n            <div className=\"flex justify-between items-center mb-8\">\r\n                <h1 className=\"text-3xl font-bold text-gray-900\">My Orders</h1>\r\n                \r\n                {/* Refresh Controls */}\r\n                <div className=\"flex items-center space-x-4\">\r\n                    <select\r\n                        value={filter}\r\n                        onChange={(e) => setFilter(e.target.value)}\r\n                        className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    >\r\n                        <option value=\"all\">All Orders</option>\r\n                        <option value=\"pending\">Pending</option>\r\n                        <option value=\"in-progress\">In Progress</option>\r\n                        <option value=\"ready-for-pickup\">Ready for Pickup</option>\r\n                        <option value=\"cancelled\">Cancelled</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            {filteredOrders.length === 0 ? (\r\n                <div className=\"text-center py-12\">\r\n                    <div className=\"text-6xl mb-4\">📦</div>\r\n                    <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">No orders found</h2>\r\n                    <p className=\"text-gray-600\">You haven't placed any orders yet.</p>\r\n                </div>\r\n            ) : (\r\n                <div className=\"space-y-6\">\r\n                    {filteredOrders.map((order) => (\r\n                        <div key={order._id} className={`bg-white rounded-lg shadow-md overflow-hidden ${isRecentUpdate(order) ? 'ring-2 ring-blue-500 ring-opacity-50' : ''}`}>\r\n                            {/* Order Header */}\r\n                            <div className=\"p-6 border-b border-gray-200\">\r\n                                <div className=\"flex justify-between items-start\">\r\n                                    <div>\r\n                                        <div className=\"flex items-center space-x-3 mb-2\">\r\n                                            <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                                                Order #{order.orderNumber}\r\n                                            </h3>\r\n                                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(order.status)}`}>\r\n                                                {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\r\n                                            </span>\r\n                                            {isRecentUpdate(order) && (\r\n                                                <span className=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full\">\r\n                                                    <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                                    </svg>\r\n                                                    Updated\r\n                                                </span>\r\n                                            )}\r\n                                        </div>\r\n                                        <p className=\"text-sm text-gray-600\">\r\n                                            Placed on {formatDate(order.createdAt)}\r\n                                        </p>\r\n                                        <p className=\"text-sm text-gray-600\">\r\n                                            Total: ₹{order.totalAmount}\r\n                                        </p>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        <button\r\n                                            onClick={() => setSelectedOrder(selectedOrder?._id === order._id ? null : order)}\r\n                                            className=\"inline-flex items-center px-3 py-2 text-sm font-medium text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded-md transition-colors\"\r\n                                        >\r\n                                            <span>Details</span>\r\n                                            <svg className={`ml-1 w-4 h-4 transition-transform ${selectedOrder?._id === order._id ? 'rotate-180' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                                            </svg>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Order Details (Expandable) */}\r\n                            {selectedOrder?._id === order._id && (\r\n                                <div className=\"p-6 bg-gray-50\">\r\n                                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n                                        {/* Order Items */}\r\n                                        <div>\r\n                                            <h4 className=\"text-lg font-semibold mb-4\">Order Items</h4>\r\n                                            <div className=\"space-y-3\">\r\n                                                {order.items.map((item, index) => (\r\n                                                    <div key={index} className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\r\n                                                        <img\r\n                                                            src={item.product.image || '/default-product.jpg'}\r\n                                                            alt={item.product.name}\r\n                                                            className=\"w-12 h-12 object-cover rounded\"\r\n                                                        />\r\n                                                        <div className=\"flex-1\">\r\n                                                            <p className=\"font-medium\">{item.product.name}</p>\r\n                                                            <p className=\"text-sm text-gray-600\">\r\n                                                                Qty: {item.quantity} × ₹{item.price}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                        <p className=\"font-semibold\">₹{item.subtotal}</p>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Order Tracking */}\r\n                                        <div>\r\n                                            <h4 className=\"text-lg font-semibold mb-4\">Order Tracking</h4>\r\n                                            \r\n                                            {/* Tracking Timeline */}\r\n                                            <div className=\"space-y-4\">\r\n                                                {order.statusHistory.map((status, index) => (\r\n                                                    <div key={index} className=\"flex items-start space-x-3\">\r\n                                                        <div className=\"flex-shrink-0\">\r\n                                                            <div className=\"w-3 h-3 bg-blue-600 rounded-full\"></div>\r\n                                                            {index < order.statusHistory.length - 1 && (\r\n                                                                <div className=\"w-0.5 h-8 bg-gray-300 mx-auto mt-1\"></div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        <div className=\"flex-1\">\r\n                                                            <div className=\"flex items-center space-x-2 mb-1\">\r\n                                                                <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(status.status)}`}>\r\n                                                                    {status.status.charAt(0).toUpperCase() + status.status.slice(1)}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <p className=\"text-sm text-gray-600\">\r\n                                                                {formatDate(status.timestamp)}\r\n                                                            </p>\r\n                                                            {status.note && (\r\n                                                                <p className=\"text-sm text-gray-500 mt-1\">{status.note}</p>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n\r\n                                            {/* Shipping Address */}\r\n                                            <div className=\"mt-6\">\r\n                                                <h5 className=\"font-semibold mb-2\">Shipping Address</h5>\r\n                                                <div className=\"bg-white p-3 rounded-lg text-sm\">\r\n                                                    <p className=\"font-medium\">{order.shippingAddress.name}</p>\r\n                                                    <p>{order.shippingAddress.street}</p>\r\n                                                    <p>{order.shippingAddress.city}, {order.shippingAddress.state} {order.shippingAddress.zipCode}</p>\r\n                                                    <p>{order.shippingAddress.country}</p>\r\n                                                    <p className=\"mt-1\">📞 {order.shippingAddress.phone}</p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* Payment Info */}\r\n                                            <div className=\"mt-4\">\r\n                                                <h5 className=\"font-semibold mb-2\">Payment Information</h5>\r\n                                                <div className=\"bg-white p-3 rounded-lg text-sm\">\r\n                                                    <p><span className=\"font-medium\">Method:</span> {order.payment?.method?.toUpperCase() || 'Not set'}</p>\r\n                                                                                                    <p><span className=\"font-medium\">Status:</span> {order.payment?.status || 'Not set'}</p>\r\n                                                {order.payment?.transactionId && (\r\n                                                    <p><span className=\"font-medium\">Transaction ID:</span> {order.payment.transactionId}</p>\r\n                                                )}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* Order Summary */}\r\n                                            <div className=\"mt-4\">\r\n                                                <h5 className=\"font-semibold mb-2\">Order Summary</h5>\r\n                                                <div className=\"bg-white p-3 rounded-lg text-sm space-y-1\">\r\n                                                    <div className=\"flex justify-between\">\r\n                                                        <span>Subtotal:</span>\r\n                                                        <span>₹{order.subtotal}</span>\r\n                                                    </div>\r\n                                                    <div className=\"flex justify-between\">\r\n                                                        <span>Tax:</span>\r\n                                                        <span>₹{order.tax}</span>\r\n                                                    </div>\r\n                                                    <div className=\"flex justify-between\">\r\n                                                        <span>Shipping:</span>\r\n                                                        <span>{order.shippingCost === 0 ? 'Free' : `₹${order.shippingCost}`}</span>\r\n                                                    </div>\r\n                                                    <div className=\"border-t pt-1 flex justify-between font-semibold\">\r\n                                                        <span>Total:</span>\r\n                                                        <span>₹{order.totalAmount}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrdersPage; "],"names":["OrdersPage","orders","setOrders","useState","loading","setLoading","selectedOrder","setSelectedOrder","filter","setFilter","statusUpdates","setStatusUpdates","showUpdateNotification","setShowUpdateNotification","location","useLocation","useEffect","_location$state","fetchOrders","state","order","console","log","pollInterval","setInterval","handleFocus","window","addEventListener","clearInterval","removeEventListener","async","silent","arguments","length","undefined","newOrders","apiRequest","data","updates","forEach","newOrder","oldOrder","find","o","_id","status","push","orderNumber","oldStatus","newStatus","setTimeout","error","getStatusColor","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","isRecentUpdate","statusHistory","latestUpdate","updateTime","timestamp","filteredOrders","_jsx","className","children","_jsxs","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","map","update","index","onClick","value","onChange","e","target","_order$payment","_order$payment$method","_order$payment2","_order$payment3","concat","charAt","toUpperCase","slice","createdAt","totalAmount","items","item","src","product","image","alt","name","quantity","price","subtotal","note","shippingAddress","street","city","zipCode","country","phone","payment","method","transactionId","tax","shippingCost"],"sourceRoot":""}