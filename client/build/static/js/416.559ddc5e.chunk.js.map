{"version":3,"file":"static/js/416.559ddc5e.chunk.js","mappings":"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","sources":["pages/admin/AdminServiceRequestManagementPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { apiRequest } from '../../utils/api';\n\nconst statusOptions = [\n  { value: 'pending', label: 'Pending' },\n  { value: 'in-progress', label: 'In Progress' },\n  { value: 'completed', label: 'Completed' },\n  { value: 'cancelled', label: 'Cancelled' },\n];\n\nconst AdminServiceRequestManagementPage = React.memo(() => {\n  const [requests, setRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedRequest, setSelectedRequest] = useState(null);\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false);\n  const [openDropdownId, setOpenDropdownId] = useState(null);\n  const dropdownRefs = useRef({});\n  const [updatingStatus, setUpdatingStatus] = useState({});\n  const [statusUpdateSuccess, setStatusUpdateSuccess] = useState({});\n\n  const fetchRequests = useCallback(async () => {\n    try {\n      setLoading(true);\n      const res = await apiRequest('/service-requests');\n      setRequests(res.data || []);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchRequests();\n  }, [fetchRequests]);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (openDropdownId !== null && dropdownRefs.current[openDropdownId] && !dropdownRefs.current[openDropdownId].contains(event.target)) {\n        setOpenDropdownId(null);\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [openDropdownId]);\n\n  const handleStatusUpdate = useCallback(async (requestId, newStatus) => {\n    try {\n      // Set loading state for this specific request\n      setUpdatingStatus(prev => ({ ...prev, [requestId]: true }));\n      \n      // Optimistic update - immediately update the local state\n      setRequests(prev => prev.map(req => req._id === requestId ? { ...req, status: newStatus } : req));\n      \n      // Make the API call\n      await apiRequest(`/service-requests/${requestId}`, 'PUT', { status: newStatus });\n      \n      // Small delay to show the optimistic update\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Show success feedback\n      setStatusUpdateSuccess(prev => ({ ...prev, [requestId]: true }));\n      // Hide success indicator after 2 seconds\n      setTimeout(() => {\n        setStatusUpdateSuccess(prev => ({ ...prev, [requestId]: false }));\n      }, 2000);\n      \n    } catch (err) {\n      setError(err.message);\n      // Revert optimistic update on error\n      await fetchRequests();\n    } finally {\n      // Clear loading state\n      setUpdatingStatus(prev => ({ ...prev, [requestId]: false }));\n    }\n  }, [fetchRequests]);\n\n  const handleDelete = useCallback(async (requestId) => {\n    if (!window.confirm('Are you sure you want to delete this request?')) return;\n    \n    try {\n      await apiRequest(`/service-requests/${requestId}`, 'DELETE');\n      setRequests(prev => prev.filter(req => req._id !== requestId));\n    } catch (err) {\n      setError(err.message);\n    }\n  }, []);\n\n  const filteredRequests = requests.filter(request => \n    statusFilter === 'all' ? true : request.status === statusFilter\n  );\n\n  // Calculate statistics\n  const stats = {\n    total: requests.length,\n    pending: requests.filter(r => r.status === 'pending').length,\n    inProgress: requests.filter(r => r.status === 'in-progress').length,\n    completed: requests.filter(r => r.status === 'completed').length,\n    cancelled: requests.filter(r => r.status === 'cancelled').length,\n    byServiceType: requests.reduce((acc, request) => {\n      acc[request.serviceType] = (acc[request.serviceType] || 0) + 1;\n      return acc;\n    }, {}),\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'in-progress':\n        return 'bg-blue-100 text-blue-800';\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'cancelled':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">Service Request Management</h1>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Total Requests</h3>\n            <p className=\"text-3xl font-bold text-blue-600\">{stats.total}</p>\n          </div>\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Pending</h3>\n            <p className=\"text-3xl font-bold text-yellow-600\">{stats.pending}</p>\n        </div>\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">In Progress</h3>\n            <p className=\"text-3xl font-bold text-blue-600\">{stats.inProgress}</p>\n          </div>\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Completed</h3>\n            <p className=\"text-3xl font-bold text-green-600\">{stats.completed}</p>\n              </div>\n            </div>\n\n            {/* Service Type Distribution */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <h4 className=\"text-lg font-medium text-gray-900 mb-4\">Service Type Distribution</h4>\n                <div className=\"space-y-4\">\n                  {Object.entries(stats.byServiceType).map(([type, count]) => (\n                    <div key={type} className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-500 capitalize\">{type}</span>\n                      <span className=\"text-sm font-semibold text-gray-900\">{count}</span>\n                    </div>\n                  ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Filter Bar */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <div className=\"flex space-x-2\">\n            <label htmlFor=\"status-filter\" className=\"block text-sm font-medium text-gray-700\">Filter by Status:</label>\n                <select\n                  id=\"status-filter\"\n                  value={statusFilter}\n                  onChange={(e) => setStatusFilter(e.target.value)}\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"all\">All Requests</option>\n                  <option value=\"pending\">Pending</option>\n                  <option value=\"in-progress\">In Progress</option>\n                  <option value=\"completed\">Completed</option>\n                  <option value=\"cancelled\">Cancelled</option>\n                </select>\n            </div>\n          </div>\n\n        {/* Request Table */}\n        <div className=\"space-y-6\">\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-300 text-xs sm:text-sm\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6\">\n                      Request ID\n                    </th>\n                    <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                      Service Type\n                    </th>\n                    <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                      Preferred Date\n                    </th>\n                    <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                      Status\n                    </th>\n                    <th scope=\"col\" className=\"relative py-3.5 pl-3 pr-4 sm:pr-6\">\n                      <span className=\"sr-only\">Actions</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-200 bg-white\">\n                  {filteredRequests.map((request) => (\n                    <tr key={request._id} className=\"hover:bg-gray-50\">\n                      <td className=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6\">\n                        #{request._id.slice(-6)}\n                      </td>\n                      <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                        {request.serviceType}\n                      </td>\n                      <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                        {new Date(request.preferredDate).toLocaleDateString()}\n                      </td>\n                      <td className=\"px-3 py-4 text-sm align-middle min-w-[120px] w-full\">\n                      <div className=\"relative inline-block\" ref={el => dropdownRefs.current[request._id] = el}>\n                        <button\n                          type=\"button\"\n                          disabled={updatingStatus[request._id]}\n                          className={`rounded-2xl px-4 py-1 text-xs font-medium flex items-center justify-center focus:outline-none border border-gray-300 transition-all min-w-[120px] ${getStatusColor(request.status)} ${updatingStatus[request._id] ? 'opacity-50 cursor-not-allowed' : ''}`}\n                          onClick={() => setOpenDropdownId(openDropdownId === request._id ? null : request._id)}\n                        >\n                          {updatingStatus[request._id] ? (\n                            <svg className=\"animate-spin w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                            </svg>\n                          ) : statusUpdateSuccess[request._id] ? (\n                            <div className=\"flex items-center\">\n                              <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                              </svg>\n                              <span className=\"ml-1 text-xs text-green-600\">Updated</span>\n                            </div>\n                          ) : (\n                            <>\n                              <span className=\"w-full text-center\">{statusOptions.find(opt => opt.value === request.status)?.label || request.status}</span>\n                              <svg className=\"ml-2 w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                              </svg>\n                            </>\n                          )}\n                        </button>\n                        {openDropdownId === request._id && !updatingStatus[request._id] && (\n                          <div className=\"absolute left-0 mt-2 z-50 bg-white shadow-xl rounded-xl py-2 px-2 min-w-[400px] w-max border border-gray-200 max-h-60 overflow-y-auto\">\n                            <div className=\"flex flex-row gap-2\">\n                              {statusOptions.map((opt, idx) => {\n                                const isSelected = request.status === opt.value;\n                                return (\n                                  <div\n                                    key={opt.value}\n                                    className={`cursor-pointer flex items-center justify-center rounded-full px-2 py-1 text-xs font-medium transition-all ${getStatusColor(opt.value)}\n                                      ${isSelected ? 'ring-2 ring-blue-500 border border-blue-400 bg-opacity-90' : ''}\n                                      hover:ring-2 hover:ring-blue-300 hover:bg-opacity-80`}\n                                    style={{ minWidth: 0 }}\n                                    onClick={() => {\n                                      setOpenDropdownId(null);\n                                      if (!isSelected) handleStatusUpdate(request._id, opt.value);\n                                    }}\n                                  >\n                                    <span className=\"w-full text-center\">{opt.label}</span>\n                                    {isSelected && (\n                                      <svg className=\"ml-1 w-3 h-3 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M5 13l4 4L19 7\" />\n                                      </svg>\n                                    )}\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                      </td>\n                      <td className=\"relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6\">\n                        <button\n                          onClick={() => {\n                            setSelectedRequest(request);\n                            setIsDetailsModalOpen(true);\n                          }}\n                          className=\"text-blue-600 hover:text-blue-900 mr-4\"\n                        >\n                          View Details\n                        </button>\n                        <button\n                          onClick={() => handleDelete(request._id)}\n                          className=\"text-red-600 hover:text-red-900\"\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n          </div>\n        </div>\n      </div>\n\n      {/* Request Details Modal */}\n      {isDetailsModalOpen && selectedRequest && (\n        <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n          <div className=\"flex items-end justify-center min-h-screen pt-4 px-2 sm:px-4 pb-20 text-center sm:block sm:p-0\">\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n            </div>\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all w-full max-w-full sm:max-w-lg\">\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                <div className=\"mt-3 text-center sm:mt-0 sm:text-left w-full\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n                    Request Details\n                  </h3>\n                  <div className=\"mt-4 space-y-4\">\n                    <div>\n                      <h4 className=\"text-sm font-medium text-gray-500\">Service Type</h4>\n                      <p className=\"mt-1 text-sm text-gray-900\">{selectedRequest.serviceType}</p>\n                    </div>\n                    <div>\n                      <h4 className=\"text-sm font-medium text-gray-500\">Preferred Schedule</h4>\n                      <p className=\"mt-1 text-sm text-gray-900\">\n                        {new Date(selectedRequest.preferredDate).toLocaleDateString()} - {selectedRequest.preferredTime}\n                      </p>\n                    </div>\n                    <div>\n                      <h4 className=\"text-sm font-medium text-gray-500\">Contact Information</h4>\n                      <p className=\"mt-1 text-sm text-gray-900\">{selectedRequest.contactNumber}</p>\n                    </div>\n                    <div>\n                      <h4 className=\"text-sm font-medium text-gray-500\">Description</h4>\n                      <p className=\"mt-1 text-sm text-gray-900\">{selectedRequest.description}</p>\n                    </div>\n                    <div>\n                      <h4 className=\"text-sm font-medium text-gray-500\">Status</h4>\n                      <select\n                        value={selectedRequest.status}\n                        onChange={(e) => {\n                          handleStatusUpdate(selectedRequest._id, e.target.value);\n                          setSelectedRequest({ ...selectedRequest, status: e.target.value });\n                        }}\n                        className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md max-w-[120px] sm:max-w-[160px] truncate whitespace-nowrap\"\n                      >\n                        <option value=\"pending\" className=\"bg-yellow-100 text-yellow-800\">Pending</option>\n                        <option value=\"in-progress\" className=\"bg-blue-100 text-blue-800\">In Progress</option>\n                        <option value=\"completed\" className=\"bg-green-100 text-green-800\">Completed</option>\n                        <option value=\"cancelled\" className=\"bg-red-100 text-red-800\">Cancelled</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                <button\n                  type=\"button\"\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                  onClick={() => {\n                    setIsDetailsModalOpen(false);\n                    setSelectedRequest(null);\n                  }}\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default AdminServiceRequestManagementPage; "],"names":["statusOptions","value","label","React","requests","setRequests","useState","loading","setLoading","error","setError","selectedRequest","setSelectedRequest","statusFilter","setStatusFilter","isDetailsModalOpen","setIsDetailsModalOpen","openDropdownId","setOpenDropdownId","dropdownRefs","useRef","updatingStatus","setUpdatingStatus","statusUpdateSuccess","setStatusUpdateSuccess","fetchRequests","useCallback","async","res","apiRequest","data","err","message","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleStatusUpdate","requestId","newStatus","prev","_objectSpread","map","req","_id","status","concat","Promise","resolve","setTimeout","handleDelete","window","confirm","filter","filteredRequests","request","stats","total","length","pending","r","inProgress","completed","cancelled","byServiceType","reduce","acc","serviceType","getStatusColor","_jsx","className","children","_jsxs","Object","entries","_ref","type","count","htmlFor","id","onChange","e","scope","_statusOptions$find","slice","Date","preferredDate","toLocaleDateString","ref","el","disabled","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","_Fragment","find","opt","idx","isSelected","style","minWidth","preferredTime","contactNumber","description"],"sourceRoot":""}