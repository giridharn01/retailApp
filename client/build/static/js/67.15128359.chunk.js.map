{"version":3,"file":"static/js/67.15128359.chunk.js","mappings":"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","sources":["pages/admin/AdminDashboardPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { apiRequest } from '../../utils/api';\n\nconst AdminDashboardPage = () => {\n  const [stats, setStats] = useState({\n    products: 0,\n    // orders: 0,\n    serviceRequests: 0,\n    users: 0,\n    pendingRequests: 0,\n    completedRequests: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchDashboardStats();\n  }, []);\n\n  const fetchDashboardStats = async () => {\n    try {\n      setLoading(true);\n      const [productsRes, serviceRequestsRes, usersRes] = await Promise.all([\n        apiRequest('/products'),\n        // apiRequest('/orders'),\n        apiRequest('/service-requests'),\n        apiRequest('/users')\n      ]);\n\n      const pendingRequests = serviceRequestsRes.data.filter(req => req.status === 'pending').length;\n      const completedRequests = serviceRequestsRes.data.filter(req => req.status === 'completed').length;\n\n      setStats({\n        products: productsRes.data.length,\n        // orders: ordersRes.data.length,\n        serviceRequests: serviceRequestsRes.data.length,\n        users: usersRes.data.length,\n        pendingRequests,\n        completedRequests\n      });\n    } catch (err) {\n      setError('Failed to fetch dashboard statistics');\n      console.error('Dashboard stats error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const dashboardCards = [\n    {\n      title: 'Total Products',\n      value: stats.products,\n      icon: 'üì¶',\n      color: 'bg-blue-500',\n      link: '/admin/products'\n    },\n    // {\n    //   title: 'Total Orders',\n    //   value: stats.orders,\n    //   icon: 'üõí',\n    //   color: 'bg-green-500',\n    //   link: '/admin/orders'\n    // },\n    {\n      title: 'Service Requests',\n      value: stats.serviceRequests,\n      icon: 'üîß',\n      color: 'bg-purple-500',\n      link: '/admin/service-requests'\n    },\n    {\n      title: 'Total Users',\n      value: stats.users,\n      icon: 'üë•',\n      color: 'bg-orange-500',\n      link: '/admin/users'\n    },\n    {\n      title: 'Pending Requests',\n      value: stats.pendingRequests,\n      icon: '‚è≥',\n      color: 'bg-yellow-500',\n      link: '/admin/service-requests'\n    },\n    {\n      title: 'Completed Requests',\n      value: stats.completedRequests,\n      icon: '‚úÖ',\n      color: 'bg-green-600',\n      link: '/admin/service-requests'\n    }\n  ];\n\n  const quickActions = [\n    {\n      title: 'Manage Products',\n      description: 'Add, edit, or remove products from inventory',\n      icon: 'üì¶',\n      link: '/admin/products',\n      color: 'bg-blue-50 hover:bg-blue-100'\n    },\n    {\n      title: 'Service Requests',\n      description: 'View and manage customer service requests',\n      icon: 'üîß',\n      link: '/admin/service-requests',\n      color: 'bg-purple-50 hover:bg-purple-100'\n    },\n    {\n      title: 'Service Types',\n      description: 'Configure service and equipment types',\n      icon: '‚öôÔ∏è',\n      link: '/admin/service-types',\n      color: 'bg-gray-50 hover:bg-gray-100'\n    }\n  ];\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-2 sm:px-4 lg:px-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Admin Dashboard</h1>\n          <p className=\"mt-2 text-gray-600\">Welcome to your admin control panel</p>\n        </div>\n\n        {error && (\n          <div className=\"mb-6 rounded-md bg-red-50 p-4\">\n            <div className=\"text-sm text-red-700\">{error}</div>\n          </div>\n        )}\n\n        {/* Statistics Cards */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Overview Statistics</h2>\n          <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3\">\n            {dashboardCards.map((card, index) => (\n              <Link\n                key={index}\n                to={card.link}\n                className=\"bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow duration-200\"\n              >\n                <div className=\"p-5\">\n                  <div className=\"flex items-center\">\n                    <div className={`flex-shrink-0 p-3 rounded-md ${card.color}`}>\n                      <span className=\"text-2xl\">{card.icon}</span>\n                    </div>\n                    <div className=\"ml-5 w-0 flex-1\">\n                      <dl>\n                        <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                          {card.title}\n                        </dt>\n                        <dd className=\"text-lg font-medium text-gray-900\">\n                          {card.value}\n                        </dd>\n                      </dl>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n\n        {/* Quick Actions */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Quick Actions</h2>\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n            {quickActions.map((action, index) => (\n              <Link\n                key={index}\n                to={action.link}\n                className={`${action.color} border border-gray-200 rounded-lg p-6 transition-colors duration-200`}\n              >\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <span className=\"text-3xl\">{action.icon}</span>\n                  </div>\n                  <div className=\"ml-4\">\n                    <h3 className=\"text-lg font-medium text-gray-900\">\n                      {action.title}\n                    </h3>\n                    <p className=\"text-sm text-gray-500\">\n                      {action.description}\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n\n        {/* Recent Activity Section */}\n        <div className=\"bg-white shadow rounded-lg\">\n          <div className=\"px-4 py-5 sm:p-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\n              Recent Activity\n            </h3>\n            <div className=\"text-center py-8\">\n              <span className=\"text-2xl\">üìä</span>\n              <p className=\"mt-2 text-gray-500\">Activity tracking coming soon...</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboardPage; "],"names":["AdminDashboardPage","stats","setStats","useState","products","serviceRequests","users","pendingRequests","completedRequests","loading","setLoading","error","setError","useEffect","fetchDashboardStats","async","productsRes","serviceRequestsRes","usersRes","Promise","all","apiRequest","data","filter","req","status","length","err","console","dashboardCards","title","value","icon","color","link","_jsx","className","children","_jsxs","map","card","index","Link","to","concat","description","action"],"sourceRoot":""}