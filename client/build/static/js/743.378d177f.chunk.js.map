{"version":3,"file":"static/js/743.378d177f.chunk.js","mappings":"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","sources":["pages/admin/AdminProductManagementPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { apiRequest } from '../../utils/api';\n\nconst AdminProductManagementPage = React.memo(() => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    price: '',\n    category: '',\n    stock: '',\n    image: ''\n  });\n\n  const fetchProducts = useCallback(async () => {\n    try {\n      setLoading(true);\n      const res = await apiRequest('/products');\n      setProducts(res.data || []);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchProducts();\n  }, [fetchProducts]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      description: '',\n      price: '',\n      category: '',\n      stock: '',\n      image: ''\n    });\n    setEditingProduct(null);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editingProduct) {\n        await apiRequest(`/products/${editingProduct._id}`, 'PUT', formData);\n        setProducts(prev => prev.map(p => p._id === editingProduct._id ? { ...p, ...formData } : p));\n      } else {\n        const res = await apiRequest('/products', 'POST', formData);\n        setProducts(prev => [...prev, res.data]);\n      }\n      setIsModalOpen(false);\n      resetForm();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleEdit = (product) => {\n    setEditingProduct(product);\n    setFormData({\n      name: product.name,\n      description: product.description,\n      price: product.price.toString(),\n      category: product.category,\n      stock: product.stock.toString(),\n      image: product.image\n    });\n    setIsModalOpen(true);\n  };\n\n  const handleDelete = async (productId) => {\n    if (!window.confirm('Are you sure you want to delete this product?')) return;\n    \n    try {\n      await apiRequest(`/products/${productId}`, 'DELETE');\n      setProducts(prev => prev.filter(p => p._id !== productId));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-2 sm:px-4 lg:px-8\">\n        <div className=\"md:flex md:items-center md:justify-between\">\n          <div className=\"flex-1 min-w-0\">\n            <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">\n              Product Management\n            </h2>\n          </div>\n          <div className=\"mt-4 flex md:mt-0 md:ml-4\">\n            <button\n              onClick={() => {\n                resetForm();\n                setIsModalOpen(true);\n              }}\n              className=\"ml-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              Add New Product\n            </button>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"mt-4 rounded-md bg-red-50 p-4\">\n            <div className=\"text-sm text-red-700\">{error}</div>\n          </div>\n        )}\n\n        {/* Products Table */}\n        <div className=\"mt-8 flex flex-col\">\n          <div className=\"-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"inline-block min-w-full py-2 align-middle md:px-6 lg:px-8\">\n              <div className=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg\">\n                <table className=\"min-w-full divide-y divide-gray-300\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th scope=\"col\" className=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6\">\n                        Product\n                      </th>\n                      <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                        Category\n                      </th>\n                      <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                        Price\n                      </th>\n                      <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                        Stock\n                      </th>\n                      <th scope=\"col\" className=\"relative py-3.5 pl-3 pr-4 sm:pr-6\">\n                        <span className=\"sr-only\">Actions</span>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200 bg-white\">\n                    {products.map((product) => (\n                      <tr key={product._id}>\n                        <td className=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm sm:pl-6\">\n                          <div className=\"flex items-center\">\n                            <div className=\"h-10 w-10 flex-shrink-0\">\n                              <img\n                                className=\"h-10 w-10 rounded-full object-cover\"\n                                src={product.image || 'https://via.placeholder.com/40'}\n                                alt={product.name}\n                              />\n                            </div>\n                            <div className=\"ml-4\">\n                              <div className=\"font-medium text-gray-900\">{product.name}</div>\n                              <div className=\"text-gray-500\">{product.description}</div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                          {product.category}\n                        </td>\n                        <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                          ₹{product.price}\n                        </td>\n                        <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                          {product.stock}\n                        </td>\n                        <td className=\"relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6\">\n                          <button\n                            onClick={() => handleEdit(product)}\n                            className=\"text-blue-600 hover:text-blue-900 mr-4\"\n                          >\n                            Edit\n                          </button>\n                          <button\n                            onClick={() => handleDelete(product._id)}\n                            className=\"text-red-600 hover:text-red-900\"\n                          >\n                            Delete\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Add/Edit Product Modal */}\n      {isModalOpen && (\n        <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n          <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n            </div>\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                  <div className=\"sm:flex sm:items-start\">\n                    <div className=\"mt-3 text-center sm:mt-0 sm:text-left w-full\">\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n                        {editingProduct ? 'Edit Product' : 'Add New Product'}\n                      </h3>\n                      <div className=\"mt-4 space-y-4\">\n                        <div>\n                          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n                            Product Name\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"name\"\n                            value={formData.name}\n                            onChange={handleInputChange}\n                            required\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                          />\n                        </div>\n                        <div>\n                          <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n                            Description\n                          </label>\n                          <textarea\n                            name=\"description\"\n                            id=\"description\"\n                            value={formData.description}\n                            onChange={handleInputChange}\n                            required\n                            rows={3}\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                          />\n                        </div>\n                        <div>\n                          <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">\n                            Price\n                          </label>\n                          <input\n                            type=\"number\"\n                            name=\"price\"\n                            id=\"price\"\n                            value={formData.price}\n                            onChange={handleInputChange}\n                            required\n                            min=\"0\"\n                            step=\"0.01\"\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                          />\n                        </div>\n                        <div>\n                          <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700\">\n                            Category\n                          </label>\n                          <select\n                            name=\"category\"\n                            id=\"category\"\n                            value={formData.category}\n                            onChange={handleInputChange}\n                            required\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                          >\n                            <option value=\"\">Select a category</option>\n                            <option value=\"electrical\">Electrical</option>\n                            <option value=\"hardware\">Hardware</option>\n                            <option value=\"agri-tech\">Agri-Tech</option>\n                            <option value=\"solar\">Solar</option>\n                          </select>\n                        </div>\n                        <div>\n                          <label htmlFor=\"stock\" className=\"block text-sm font-medium text-gray-700\">\n                            Stock\n                          </label>\n                          <input\n                            type=\"number\"\n                            name=\"stock\"\n                            id=\"stock\"\n                            value={formData.stock}\n                            onChange={handleInputChange}\n                            required\n                            min=\"0\"\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                          />\n                        </div>\n                        <div>\n                          <label htmlFor=\"image\" className=\"block text-sm font-medium text-gray-700\">\n                            Image URL\n                          </label>\n                          <input\n                            type=\"url\"\n                            name=\"image\"\n                            id=\"image\"\n                            value={formData.image}\n                            onChange={handleInputChange}\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                  <button\n                    type=\"submit\"\n                    className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\"\n                  >\n                    {editingProduct ? 'Update Product' : 'Add Product'}\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setIsModalOpen(false);\n                      resetForm();\n                    }}\n                    className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default AdminProductManagementPage; "],"names":["React","products","setProducts","useState","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","editingProduct","setEditingProduct","formData","setFormData","name","description","price","category","stock","image","fetchProducts","useCallback","async","res","apiRequest","data","err","message","useEffect","handleInputChange","e","value","target","prev","_objectSpread","resetForm","_jsx","className","children","_jsxs","onClick","scope","map","product","src","alt","toString","handleEdit","window","confirm","concat","productId","filter","p","_id","handleDelete","onSubmit","preventDefault","htmlFor","type","id","onChange","required","rows","min","step"],"sourceRoot":""}